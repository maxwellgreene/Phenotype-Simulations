library(GeneticAlgorithms)
geneticSpecies
devtools::load_all()
devtools::load_all(GeneticAlgorithms)
setwd("~/GitHub/Phenotype-Simulations/Genetic Algorithms")
devtools::load_all(GeneticAlgorithms)
devtools::load_all()
setwd("~/GitHub/Phenotype-Simulations/Genetic Algorithms/GeneticAlgorithms")
devtools::load_all()
rmarkdown::render("GeneticNotebook.Rmd")
setwd("~/GitHub/Phenotype-Simulations/Genetic Algorithms")
rmarkdown::render("GeneticNotebook.Rmd")
source('~/GitHub/Phenotype-Simulations/Genetic Algorithms/Genetic.R')
library(tidyverse)
library(dplyr)
library(GeneticAlgorithms)
phenotype <- rnorm(1,0,1)
phenotype
individual <- data.frame(var1=rnorm(1,0,1),
var2=rnorm(1,0,1))
individual
numIndivs <- 2
makespecies <- function(numIndivs)
{
species <- data.frame(var1=rnorm(numIndivs,0,1),
var2=rnorm(numIndivs,0,1))
return(species)
}
makespecies(numIndivs)
numSpecies <- 2
population <- data.frame(speciesNum=0,var1=0,var2=0)
for(i in 1:numSpecies)
{
population <- rbind(population,
mutate(speciesNum = rep(i,numIndivs),
makespecies(numIndivs)))
}
population[-1,]
fitnessFunction <- function(x,y)
{  return(x+y)  }
fitnessFunction(1,2)
fitfunc <- function(x,y)
{return((x^2+y^2))}
geneticSpecies(fitfunc,gens=100,indivs=3,creation="child")
geneticPopulation(fitfunc,species=10,indivs=10,gens=100,creation="new",plot="time")
geneticPopulation(
fitfunc,species=10,indivs=10,gens=100,creation="child",plot="time")
geneticPopulation(
fitfunc,species=10,indivs=10,gens=100,creation="new",plot="maxVals")
geneticPopulation(
fitfunc,species=10,indivs=10,gens=100,creation="child",plot="maxVals")
setwd("~/GitHub/Phenotype-Simulations/Genetic Algorithms")
parent <- data.frame(var1=rnorm(1,0,.5),var2=rnorm(1,0,.5))
child <- data.frame(var1=rnorm(1,0,.5),var2=rnorm(1,0,.5))
rnorm(0,5)
rnorm(1,0,5)
rnorm(2,0,5)
rnorm(-1,0,5)
rnorm(0,0,5)
rnorm(1,0,5)
rmarkdown::render("GeneticNotebook.Rmd")
